'use strict';

/**
 * Generator for IconName type. Gets all the icons names and creates a union type of them.
 */

const fs = require('fs');
const path = require('path');

const appDirectory = fs.realpathSync(process.cwd());
const resolveApp = (relativePath) => path.resolve(appDirectory, relativePath);

const ICONS_PATH = 'src/ui-kit/assets/icons';
const DEFINITION_PATH = 'src/ui-kit/atoms/IconSvg/IconName.d.ts';
const ICONS_PATH_RESOLVED = resolveApp(ICONS_PATH);
const DEFINITION_PATH_RESOLVED = resolveApp(DEFINITION_PATH);

const svgFiles = fs.readdirSync(ICONS_PATH_RESOLVED);

const iconsNames = svgFiles
  .filter((fn) => fn.endsWith('.svg'))
  .map((fn) => fn.substr(0, fn.length - 4));

const union = iconsNames.map((name) => `'${name}'`).join('\n  | ');

const content = `/* This file is generated by generateIconsType script. Don't edit manually. */
declare type IconName = 
  | ${union};
`;

console.info(`Type for ${iconsNames.length} icons generated.`);

fs.writeFileSync(DEFINITION_PATH_RESOLVED, content, {encoding: 'utf8'});

console.info(`Definition saved to ${DEFINITION_PATH_RESOLVED}`);
